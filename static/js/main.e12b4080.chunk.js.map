{"version":3,"sources":["Hud.js","App.js","reportWebVitals.js","index.js"],"names":["Hud","useState","showMenu","setShowMenu","className","onClick","href","Model","props","group","useRef","useFrame","current","rotation","y","useGLTF","nodes","materials","ref","dispose","geometry","Sphere","material","position","scale","App","camera","intensity","fallback","OrbitControls","enablePan","enableZoom","maxPolarAngle","Math","PI","minPolarAngle","Loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAwEeA,EAvDH,WAEV,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA,OACE,mCACC,mCACG,sBACEC,UAAWF,EAAW,iBAAmB,WACzCG,QAAS,WAVfF,GAAaD,IAQT,UAIE,qBAAKE,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,gBAEnB,qBAAKA,UAAWF,EAAW,YAAc,OAAzC,SACI,qBAAIE,UAAU,WAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,mBAAGE,KAAK,IAAIF,UAAU,WAAtB,oBAIF,oBAAIA,UAAU,WAAd,SACE,mBAAGE,KAAK,cAAcF,UAAU,WAAhC,qBAIF,oBAAIA,UAAU,WAAd,SACE,mBAAGE,KAAK,aAAaF,UAAU,WAA/B,wBAIF,oBAAIA,UAAU,WAAd,SACE,mBAAGE,KAAK,gBAAgBF,UAAU,WAAlC,kCCjDd,SAASG,EAAMC,GACb,IAAMC,EAAQC,mBACdC,aAAS,kBAAOF,EAAMG,QAAQC,SAASC,GAAK,QAC5C,MAA6BC,YAAQ,kBAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACf,OACE,+CAAOC,IAAKT,GAAWD,GAAvB,IAA8BW,QAAS,KAAvC,SACE,sBACEC,SAAUJ,EAAMK,OAAOD,SACvBE,SAAUL,EAAU,gBACpBM,SAAU,EAAE,MAAO,KAAM,KACzBC,MAAO,WAQA,SAASC,IACtB,OACE,qCAEA,eAAC,IAAD,CACAC,OAAQ,CAAEH,SAAU,EAAE,GAAI,EAAG,IAD7B,UAGE,4BAAYA,SAAU,CAAC,EAAG,GAAI,IAAKI,UAAW,IAC9C,8BAAcA,UAAW,KAEzB,cAAC,WAAD,CAAUC,SAAU,KAApB,SAEE,cAACrB,EAAD,MAEF,cAACsB,EAAA,EAAD,CAAeC,WAAW,EAAOC,YAAY,EAAOC,cAAeC,KAAKC,GAAK,IAAKC,cAAeF,KAAKC,GAAK,OAG7G,cAACE,EAAA,EAAD,IACA,cAAC,EAAD,OC3CJ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e12b4080.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport styled, { css, createGlobalStyle } from 'styled-components'\r\nimport ReactDOM from 'react-dom'\r\nimport {\r\n    animated,\r\n    useTransition,\r\n    useSpring,\r\n    useChain,\r\n    config\r\n  } from 'react-spring'\r\nimport 'normalize-css'\r\nimport './styles.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Hud = () => {\r\n  \r\n  const [showMenu, setShowMenu] = useState(false);\r\n\r\n  const toggleClass = () => {\r\n    setShowMenu(!showMenu );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n     <header>\r\n        <div\r\n          className={showMenu ? \"menu-btn close\" : \"menu-btn\"}\r\n          onClick={() =>toggleClass()}\r\n        >\r\n          <div className=\"btn-line\" />\r\n          <div className=\"btn-line\" />\r\n          <div className=\"btn-line\" />\r\n      </div>\r\n      <nav className={showMenu ? \"menu show\" : \"menu\"}>\r\n          <ul className=\"menu-nav\">\r\n            <li className=\"nav-item current\">\r\n              <a href=\"/\" className=\"nav-link\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/about.html\" className=\"nav-link\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/work.html\" className=\"nav-link\">\r\n                Services\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/contact.html\" className=\"nav-link\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n    </header>\r\n      \r\n   \r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Hud\r\n","import React, { useRef, Suspense } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { useGLTF, OrbitControls, Loader } from '@react-three/drei'\n\n\nimport Hud from './Hud'\n\nfunction Model(props) {\n  const group = useRef()\n  useFrame(() => (group.current.rotation.y -= 0.002))\n  const { nodes, materials } = useGLTF('./worldss5.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.Sphere.geometry}\n        material={materials['Material.001']}\n        position={[-3.32, -4.81, 0.82]}\n        scale={38.07}\n      />\n    </group>\n  )\n}\n \n\n\nexport default function App() {\n  return (\n    <>\n    \n    <Canvas\n    camera={{ position: [-15, 5, 0] }}>\n      \n      <pointLight position={[0, 1, -50]} intensity={2} />\n      <ambientLight intensity={0.2} />\n      \n      <Suspense fallback={null}>\n      \n        <Model />\n      </Suspense>\n      <OrbitControls enablePan={false} enableZoom={false} maxPolarAngle={Math.PI / 2.5} minPolarAngle={Math.PI / 4}  />\n      \n    </Canvas>\n    <Loader />\n    <Hud/>\n\n    \n    \n    </>\n    \n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}